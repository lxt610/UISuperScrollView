{"version":3,"sources":["assets/cores/UISuperScrollView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["/*\n * @Author: steveJobs\n * @Email: icipiqkm@gmail.com\n * @Date: 2020-11-19 01:15:04\n * @Last Modified by: steveJobs\n * @Last Modified time: 2020-12-04 14:35:43\n * @Description: Description\n */\nimport UISuperLayout from './UISuperLayout';\nconst { ccclass, property, menu } = cc._decorator;\nconst EPSILON = 1e-4;\nexport interface UISuperHeaderAndFooterEvent {\n    /** 执行动作 true:满足触发条件 */\n    action: boolean,\n    /** 根据参数headerOutOffset或footerOutOffset 来计算的进度值 */\n    progress: number,\n    /** 当前进度状态 \n     * touch=触摸中 正在触摸滑动中 \n     * wait=等待中 已经满足了触发的更新动作的条件 \n     * lock=锁定中 当前正在执行刷新或加载\n     * release=释放中 \n     */\n    progressStage: \"touch\" | \"wait\" | \"lock\" | \"release\",\n}\n@ccclass\n@menu(\"UISpuerScrollView\")\nexport default class UISpuerScrollView extends cc.ScrollView {\n    @property({\n        displayName: \"顶部偏移量\",\n        tooltip: \"下拉时超过此偏移会发送下拉事件\"\n    }) headerOutOffset: number = 200\n    @property({ displayName: \"满足触发Header的倍数\" }) headerMultiple: number = 2\n    @property({\n        displayName: \"底部偏移量\",\n        tooltip: \"上拉时超过此偏移会发送上拉事件\"\n    }) footerOutOffset: number = 200\n    @property({ displayName: \"满足触发Footer的倍数\" }) footerMultiple: number = 2\n    @property({\n        type: cc.Component.EventHandler,\n        displayName: \"下拉事件\"\n    }) pullDownEvents: cc.Component.EventHandler[] = []\n    @property({\n        type: cc.Component.EventHandler,\n        displayName: \"上拉事件\"\n    }) pullUpEvents: cc.Component.EventHandler[] = []\n    public get view(): cc.Node { return this['_view'] }\n    public set autoScrolling(value: boolean) { this['_autoScrolling'] = value }\n    public get autoScrolling() { return this['_autoScrolling'] }\n    private isMoveHeader: boolean = false\n    private isMoveFooter: boolean = false\n    private isLockHeader: boolean = false\n    private isLockFooter: boolean = false\n    private headerProgress: number = 0\n    private footerProgress: number = 0\n    private _layout: UISuperLayout = null\n    private get layout(): UISuperLayout {\n        if (this._layout == null) this._layout = this.content.getComponent(UISuperLayout)\n        return this._layout\n    }\n    /** 当前头部的item是否真的是数据的开头 也就是0 */\n    private get isHeader() {\n        if (this.layout.headerToFooter) {\n            if (this.layout?.header) {\n                return this.layout?.header['index'] == 0\n            }\n        } else {\n            if (this.layout?.footer) {\n                return this.layout?.footer['index'] == this.layout.maxItemTotal - 1\n            }\n        }\n        return true\n    }\n    /** 当前尾部的item是否真的是数据的结尾 */\n    private get isFooter() {\n        if (this.layout.headerToFooter) {\n            if (this.layout?.footer) {\n                return this.layout.footer['index'] == this.layout.maxItemTotal - 1\n            }\n        } else {\n            if (this.layout?.header) {\n                return this.layout?.header['index'] == 0\n            }\n        }\n        return true\n    }\n    /** 是否需要计算？如果上拉/下拉事件没有监听者则不需要相关的计算 */\n    public get isCalculPull() {\n        return this.pullDownEvents.length > 0 || this.pullUpEvents.length > 0\n    }\n    public calculateBoundary() {\n        this['_calculateBoundary']()\n    }\n    public getHowMuchOutOfBoundary(offset?: cc.Vec2) {\n        return this['_getHowMuchOutOfBoundary'](offset)\n    }\n    onLoad() {\n        this.node.on(cc.Node.EventType.SIZE_CHANGED, this.onChangeSize, this)\n    }\n    onDestroy() {\n        this.node.off(cc.Node.EventType.SIZE_CHANGED, this.onChangeSize, this)\n    }\n    private onChangeSize() {\n        let widget = this.view.getComponent(cc.Widget)\n        if (!widget) return\n        widget.updateAlignment()\n    }\n    /** 释放 功能用于上拉加载下拉刷新 解锁头尾固定的尺寸 */\n    public release() {\n        this.isMoveHeader = false\n        this.isMoveFooter = false\n        if (this.isLockHeader || this.isLockFooter) {\n            let outOfBoundary = this.getHowMuchOutOfBoundary()\n            let offset = this.vertical ? outOfBoundary.y : -outOfBoundary.x\n            let autoScroll = true\n            if (offset == 0 || this.isLockHeader && offset < 0 || this.isLockFooter && offset > 0) {\n                this.clearProgress()\n                autoScroll = false\n            }\n            this.isLockHeader = false\n            this.isLockFooter = false\n            if (autoScroll) {\n                this['_outOfBoundaryAmountDirty'] = true\n                this['_processInertiaScroll']()\n            }\n        } else {\n            this.clearProgress()\n        }\n    }\n\n    /**重置列表 当列表滑动到底部时 然后不管通过什么方式(同步|异步)减少了整体的(高度|缩放|尺寸) 时保证内容显示正确 */\n    public reset() {\n        this['_outOfBoundaryAmountDirty'] = true\n        let offset = this.getHowMuchOutOfBoundary()\n        if (!offset.fuzzyEquals(cc.v2(0, 0), EPSILON)) {\n            this['_processInertiaScroll']()\n        }\n    }\n    private _onTouchMoved(event: cc.Event.EventTouch, captureListeners) {\n        super['_onTouchMoved'](event, captureListeners)\n        if (this.isCalculPull) {\n            let outOfBoundary = this.getHowMuchOutOfBoundary()\n            let offset = this.vertical ? outOfBoundary.y : -outOfBoundary.x\n            if (offset > 0 && this.isHeader && !this.isLockHeader && !this.isLockFooter) {\n                this.headerProgress = offset < EPSILON ? 0 : offset / this.headerOutOffset\n                this.isMoveHeader = this.headerProgress >= this.headerMultiple\n                this.emitPullDownEvent({ action: false, progress: this.headerProgress, progressStage: this.isMoveHeader ? \"wait\" : \"touch\" })\n                this.emitPullUpEvent({ action: false, progress: 0, progressStage: \"release\" })\n            } else if (offset < 0 && this.isFooter && !this.isLockFooter && !this.isLockHeader) {\n                this.footerProgress = -offset < EPSILON ? 0 : -offset / this.footerOutOffset\n                this.isMoveFooter = this.footerProgress >= this.footerMultiple\n                this.emitPullUpEvent({ action: false, progress: this.footerProgress, progressStage: this.isMoveFooter ? \"wait\" : \"touch\" })\n                this.emitPullDownEvent({ action: false, progress: 0, progressStage: \"release\" })\n            }\n        }\n    }\n    private _dispatchEvent(event) {\n        super['_dispatchEvent'](event)\n        if (event == 'scroll-ended') {\n            this.layout.scrollToHeaderOrFooter = false //功能用于控制循环滚动时使用scrollTo方法滚动带来的效果问题 \n        }\n    }\n    private _getContentTopBoundary() {\n        let viewSize = this.view.getContentSize()\n        let local = 0\n        if (this.layout?.header && this.layout.getReallySize().height > viewSize.height) {\n            local = this.layout.topBoundary //返回头部item上边距\n        } else {\n            //功能用于无内容/少量内容时也可以上拉加载下拉刷新 如果所有item加起来的尺寸不足以撑满整个可视区域时 直接使用view可视尺寸\n            local = this._getContentBottomBoundary() + viewSize.height\n        }\n        if (this.isHeader && this.isLockHeader) {\n            local += this.headerOutOffset  //功能用于上拉加载 下拉刷新 让整个content多一个 headerOutOffset 的尺寸\n        }\n        return local\n    }\n    private _getContentBottomBoundary() {\n        let viewSize = this.view.getContentSize()\n        let local = 0\n        if (this.layout?.footer && this.layout.getReallySize().height > viewSize.height) {\n            local = this.layout.bottomBoundary //返回尾部item上边距\n        } else {\n            //功能用于无内容/少量内容时也可以上拉加载下拉刷新 如果所有item加起来的尺寸不足以撑满整个可视区域时 直接使用view可视尺寸\n            local = this.layout.node.y - this.layout.node.getAnchorPoint().y * viewSize.height;\n        }\n        if (this.isFooter && this.isLockFooter) {\n            local -= this.footerOutOffset  //功能用于上拉加载 下拉刷新 让整个content多一个 footerOutOffset 的尺寸\n        }\n        return local\n    }\n    private _getContentLeftBoundary() {\n        let viewSize = this.view.getContentSize()\n        let local = 0\n        if (this.layout?.header && this.layout.getReallySize().width > viewSize.width) {\n            local = this.layout.leftBoundary //返回头部item左边距\n        } else {\n            //功能用于无内容/少量内容时也可以上拉加载下拉刷新 如果所有item加起来的尺寸不足以撑满整个可视区域时 直接使用view可视尺寸\n            local = this.layout.node.x - this.layout.node.getAnchorPoint().x * viewSize.width;\n        }\n        if (this.isHeader && this.isLockHeader) {\n            local -= this.headerOutOffset  //功能用于上拉加载 下拉刷新 让整个content多一个 headerOutOffset 的尺寸\n        }\n        return local\n    }\n    private _getContentRightBoundary() {\n        let viewSize = this.view.getContentSize()\n        let local = 0\n        if (this.layout?.footer && this.layout.getReallySize().width > viewSize.width) {\n            local = this.layout.rightBoundary //返回头部item右边距\n        } else {\n            //功能用于无内容/少量内容时也可以上拉加载下拉刷新 如果所有item加起来的尺寸不足以撑满整个可视区域时 直接使用view可视尺寸\n            local = this._getContentLeftBoundary() + viewSize.width\n        }\n        if (this.isFooter && this.isLockFooter) {\n            local += this.footerOutOffset //功能用于上拉加载 下拉刷新 让整个content多一个 footerOutOffset 的尺寸\n        }\n        return local\n    }\n    private _startAutoScroll(deltaMove, timeInSecond, attenuated) {\n        if (this.isCalculPull) {  // 如果没有刷新/加载的监听者 则不计算 \n            if (this.isMoveHeader && !this.isLockHeader) { // 锁住头部 意思就是已经触发了下拉事件 应用层应该做些刷新的动作\n                this.isLockHeader = true\n                this.vertical && (deltaMove.y -= this.headerOutOffset)\n                this.horizontal && (deltaMove.x += this.headerOutOffset)\n                this.emitPullDownEvent({ action: true, progress: this.headerProgress, progressStage: 'lock' })\n            } else if (this.isMoveFooter && !this.isLockFooter) { // 锁住尾部 意思就是已经触发了上拉事件 应用层应该做些加载的动作\n                this.isLockFooter = true\n                this.vertical && (deltaMove.y += this.footerOutOffset)\n                this.horizontal && (deltaMove.x -= this.footerOutOffset)\n                this.emitPullUpEvent({ action: true, progress: this.footerProgress, progressStage: 'lock' })\n            }\n        }\n        super['_startAutoScroll'](deltaMove, timeInSecond, attenuated)\n    }\n    private _updateScrollBar(outOfBoundary) {\n        super['_updateScrollBar'](outOfBoundary)\n        if (!this.isCalculPull) return // 如果没有刷新/加载的监听者 则不计算 \n        if (this['_autoScrollBraking']) return // 自动回弹时不计算 （非手动）\n        if (!this.autoScrolling) return // 非自动滚动时不计算 \n        let offset = this.vertical ? outOfBoundary.y : -outOfBoundary.x\n        if (offset > 0) { // 下滑\n            let progress = offset < EPSILON ? 0 : offset / this.headerOutOffset //根据参数 headerOutOffset 计算当前下滑的办百分比\n            let progressStage\n            if (this.isLockHeader) {\n                this.headerProgress = this.headerProgress == 1 ? this.headerProgress : Math.max(progress, 1)\n                progressStage = 'lock'  //锁定状态\n            } else {\n                this.headerProgress = progress < this.headerProgress ? progress : this.headerProgress\n                progressStage = 'release' //释放状态\n            }\n            this.emitPullDownEvent({ action: false, progress: this.headerProgress, progressStage: progressStage })\n\n        } else if (offset < 0) { //上拉\n            let progress = -offset < EPSILON ? 0 : -offset / this.footerOutOffset  //根据参数 footerOutOffset 计算当前下滑的办百分比\n            let progressStage\n            if (this.isLockFooter) {\n                this.footerProgress = this.footerProgress == 1 ? this.footerProgress : Math.max(progress, 1)\n                progressStage = 'lock'  //锁定状态\n            } else {\n                this.footerProgress = progress < this.footerProgress ? progress : this.footerProgress\n                progressStage = 'release'  //释放状态\n            }\n            this.emitPullUpEvent({ action: false, progress: this.footerProgress, progressStage: progressStage })\n\n        } else if (offset == 0) {\n            // 正常滑动时 如果没有锁定头和尾时 释放所有进度\n            if (!this.isLockHeader && !this.isLockFooter) {\n                this.clearProgress()\n            }\n        }\n    }\n    private clearProgress() {\n        this.headerProgress = 0\n        this.footerProgress = 0\n        this.emitPullDownEvent({ action: false, progress: 0, progressStage: 'release' })\n        this.emitPullUpEvent({ action: false, progress: 0, progressStage: 'release' })\n    }\n    private emitPullDownEvent(data: UISuperHeaderAndFooterEvent) {\n        cc.Component.EventHandler.emitEvents(this.pullDownEvents, this, data)\n    }\n    private emitPullUpEvent(data: UISuperHeaderAndFooterEvent) {\n        cc.Component.EventHandler.emitEvents(this.pullUpEvents, this, data)\n    }\n}\n"]}