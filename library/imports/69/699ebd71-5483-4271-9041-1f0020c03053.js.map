{"version":3,"sources":["assets/cores/UISuperLayout.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["/*\n * @Author: steveJobs\n * @Email: icipiqkm@gmail.com\n * @Date: 2020-11-19 01:15:52\n * @Last Modified by: steveJobs\n * @Last Modified time: 2021-01-23 18:05:39\n * @Description: 名词说明 什么是一组item？\n * 垂直模式  \n * 1,2,3 一组item包含 1,2,3  1是一组item中header 也是整个列表的header 3是一组item中footer 9是整个列表的footer\n * 4,5,6\n * 7,8,9\n * 调用 isGroupHeader传入 1节点 返回true  调用 isGroupFooter传入 3节点返回true \n * 调用 getGroupLeftX 传入 2节点 返回1节点位置X getGroupRightX 返回3节点位置X\n * 调用 getGroupBottomY 传入 5节点 返回8节点位置Y getGroupTopY 返回2节点位置Y\n * 水平模式\n * |1|,4,7 一组item包含 1,2,3 1是一组item中header 也是整个列表的header 3是一组item中footer 9是整个列表的footer\n * |2|,5,8\n * |3|,6,9\n */\nimport UISpuerScrollView from './UISuperScrollView';\nimport UISpuerItem from './UISuperItem';\nconst { ccclass, property, menu } = cc._decorator;\nconst EPSILON = 1e-4;\nexport const UIChangeBrotherEvnet = \"UIChangeBrotherEvnet\"\nexport enum UISuperAxis {\n    HORIZONTAL = 0,\n    VERTICAL = 1\n}\nexport enum UISuperDirection {\n    HEADER_TO_FOOTER = 0,\n    FOOTER_TO_HEADER = 1,\n}\n@ccclass\n@menu(\"UISuperLayout\")\nexport default class UISuperLayout extends cc.Component {\n    @property({ type: cc.Enum(UISuperAxis), displayName: \"排列方向\" }) startAxis: UISuperAxis = UISuperAxis.VERTICAL\n    @property({ type: cc.Enum(UISuperDirection), displayName: \"排列子节点的方向\" }) direction: UISuperDirection = UISuperDirection.HEADER_TO_FOOTER\n    @property({ displayName: \"上边距\" }) paddingTop: number = 0\n    @property({ displayName: \"下边距\" }) paddingBottom: number = 0\n    @property({ displayName: \"左边距\" }) paddingLeft: number = 0\n    @property({ displayName: \"右边距\" }) paddingRight: number = 0\n    @property({ displayName: \"间隔\" }) spacing: cc.Vec2 = cc.Vec2.ZERO\n    @property({ displayName: \"每组item个数\", tooltip: \"单行的列数 或 单列的行数\" }) column: number = 2\n    @property({ displayName: \"item创建倍率\", tooltip: \"相对于view的尺寸 默认2倍\" }) multiple: number = 2\n    @property({ type: cc.Prefab, displayName: \"item Prefab\" }) prefab: cc.Prefab = null\n    @property({ displayName: \"头部滑动循环\" }) headerLoop: boolean = false\n    @property({ displayName: \"尾部滑动循环\" }) footerLoop: boolean = false\n    @property affectedByScale: boolean = true\n    @property(cc.Component.EventHandler) refreshItemEvents: cc.Component.EventHandler[] = []\n    private _gener: Generator\n    private _isinited: boolean = false\n    private _maxPrefabTotal: number = 0\n    private _children: cc.Node[] = [] //和this.node.children 保持同步\n    private _viewSize: cc.Size\n    private _scrollView: UISpuerScrollView = null\n    private _maxItemTotal: number = 0\n    private _prevLayoutPosition: cc.Vec2 = cc.Vec2.ZERO\n    /** 当前的滚动是否是由 scrollTo 方法执行的 和touch滑动做个区分*/\n    public scrollToHeaderOrFooter: boolean = false\n    /** 根据上一次和本次的坐标变化计算滑动方向 */\n    private get layoutDirection(): cc.Vec2 {\n        let pos = cc.Vec2.ZERO\n        if (this.vertical) {\n            pos.y = this.node.y - this._prevLayoutPosition.y\n        } else {\n            pos.x = this.node.x - this._prevLayoutPosition.x\n        }\n        this._prevLayoutPosition = this.node.getPosition()\n        return pos\n    }\n    /** 是否是向下滑动 */\n    private get isScrollToFooter(): boolean {\n        if (this.vertical) {\n            return this.layoutDirection.y < 0\n        } else {\n            return this.layoutDirection.x > 0\n        }\n    }\n    /** 自己维护的子节点数组 和this.node.children 保持同步 */\n    public get children() { return this._children }\n    /** 最大数据总数 */\n    public get maxItemTotal() { return this._maxItemTotal }\n    /** 当前被创建的item总数 */\n    public get maxPrefabTotal() { return this._maxPrefabTotal }\n    /** scrollView.view尺寸 */\n    public get viewSize(): cc.Size {\n        return this.scrollView.view.getContentSize()\n    }\n    /** 是否是垂直模式 */\n    public get vertical(): boolean {\n        return this.startAxis == UISuperAxis.VERTICAL\n    }\n    /** 是否是水平模式 */\n    public get horizontal(): boolean {\n        return this.startAxis == UISuperAxis.HORIZONTAL\n    }\n    /** 是否是正序排列 */\n    public get headerToFooter(): boolean {\n        return this.direction == UISuperDirection.HEADER_TO_FOOTER\n    }\n    /** 是否是倒序排列 */\n    public get footerToHeader(): boolean {\n        return this.direction == UISuperDirection.FOOTER_TO_HEADER\n    }\n    /** 水平间隔总宽度 (Grid 模式返回多个间隔总宽度) */\n    public get spacingWidth() {\n        return this.spacing.x * (this.column - 1)\n    }\n    /** 水平间隔总高度 (Grid 模式返回多个间隔总高度) */\n    public get spacingHeight() {\n        return this.spacing.y * (this.column - 1)\n    }\n    /** 可容纳item的真实宽度 */\n    public get accommodWidth() {\n        return this.viewSize.width - this.paddingLeft - this.paddingRight\n    }\n    /** 可容纳item的真实高度 */\n    public get accommodHeight() {\n        return this.viewSize.height - this.paddingTop - this.paddingBottom\n    }\n    public get scrollView(): UISpuerScrollView {\n        if (!this._scrollView) this._scrollView = this.node.parent.parent.getComponent(UISpuerScrollView)\n        return this._scrollView\n    }\n    /** 当前头部的item */\n    public get header(): cc.Node {\n        return this._children[0]\n    }\n    /** 当前尾部的item */\n    public get footer(): cc.Node {\n        return this._children[this._children.length - 1]\n    }\n    /** 真实的上边距 */\n    public get topBoundary() {\n        if (this.headerToFooter) {\n            return this.headerBoundaryY + this.paddingTop\n        } else {\n            return this.footerBoundaryY + this.paddingTop\n        }\n    }\n    /** 真实的下边距 */\n    public get bottomBoundary() {\n        if (this.headerToFooter) {\n            return this.footerBoundaryY - this.paddingBottom\n        } else {\n            return this.headerBoundaryY - this.paddingBottom\n        }\n    }\n    /** 真实的左边距 */\n    public get leftBoundary() {\n        if (this.headerToFooter) {\n            return this.headerBoundaryX - this.paddingLeft\n        } else {\n            return this.footerBoundaryX - this.paddingLeft\n        }\n    }\n    /** 真实的右边距 */\n    public get rightBoundary() {\n        if (this.headerToFooter) {\n            return this.footerBoundaryX + this.paddingRight\n        } else {\n            return this.headerBoundaryX + this.paddingRight\n        }\n    }\n    /** 头部item的世界坐标边框 类似 xMin、xMax */\n    public get headerBoundaryX() {\n        if (this.headerToFooter) {\n            return this.node.x + this.header.x - this.header.anchorX * this.getScaleWidth(this.header)\n        } else {\n            return this.node.x + this.header.x + (1 - this.header.anchorX) * this.getScaleWidth(this.header)\n        }\n    }\n    /** 头部item的世界坐标边框 类似 yMin、yMax */\n    public get headerBoundaryY() {\n        if (this.headerToFooter) {\n            return this.node.y + this.header.y + (1 - this.header.anchorY) * this.getScaleHeight(this.header)\n        } else {\n            return this.node.y + this.header.y - this.header.anchorY * this.getScaleHeight(this.header)\n        }\n    }\n    /** 尾部item的世界坐标边框 类似 xMin、xMax */\n    public get footerBoundaryX() {\n        if (this.headerToFooter) {\n            return this.node.x + this.footer.x + (1 - this.footer.anchorX) * this.getScaleWidth(this.footer)\n        } else {\n            return this.node.x + this.footer.x - this.footer.anchorX * this.getScaleWidth(this.footer)\n        }\n    }\n    /** 尾部item的世界坐标边框 类似 yMin、yMax */\n    public get footerBoundaryY() {\n        if (this.headerToFooter) {\n            return this.node.y + this.footer.y - this.footer.anchorY * this.getScaleHeight(this.footer)\n        } else {\n            return this.node.y + this.footer.y + (1 - this.footer.anchorY) * this.getScaleHeight(this.footer)\n        }\n    }\n    public get isNormalSize(): boolean {\n        return this.node.getContentSize().equals(this.viewSize)\n    }\n\n    /** 重写 this.node.getContentSize 动态计算头尾item 返回虚拟的尺寸 非content设置的尺寸 */\n    public getContentSize() {\n        let size = this.getReallySize()\n        let viewSize = this.scrollView.view.getContentSize()\n        // 列表为空时 直接返回 scrollView.view 的尺寸\n        if (size.height < viewSize.height) {\n            size.height = viewSize.height\n        }\n        if (size.width < viewSize.width) {\n            size.width = viewSize.width\n        }\n        return size\n    }\n    /** 返回 header到 footer 之间的整体尺寸 */\n    public getReallySize() {\n        if (this.node.childrenCount == 0) return this.viewSize\n        let size = cc.Size.ZERO\n        if (this.headerToFooter) { // 根据header和footer计算出真实的content尺寸 \n            size.width = this.footerBoundaryX + -this.headerBoundaryX + this.paddingLeft + this.paddingRight\n            size.height = this.headerBoundaryY + -this.footerBoundaryY + this.paddingTop + this.paddingBottom\n        } else {\n            size.width = this.headerBoundaryX + -this.footerBoundaryX + this.paddingLeft + this.paddingRight\n            size.height = this.footerBoundaryY + -this.headerBoundaryY + this.paddingTop + this.paddingBottom\n        }\n        return size\n    }\n    /** 重置scrollview */\n    public resetScrollView() {\n        this.scrollView.reset()\n    }\n    /** 获取缩放系数 */\n    public getUsedScaleValue(value: number) {\n        return this.affectedByScale ? Math.abs(value) : 1\n    }\n    /** 设置最大item数量 */\n    public async total(value: number) {\n        this.scrollView.stopAutoScroll()\n        this.scrollView.release() // 释放（功能用于上拉加载 下拉刷新）\n        this.initlized()  // 初始化\n        await this.asyncCreateItem(value) // 分帧创建item\n        let dataOffset = this.getDataOffset(value) //获取数据偏移量（根据value相对于 _maxItemTotal 计算增加、减少的数量）\n        let reallyOffset = this.getReallyOffset(dataOffset) // 获取真实的数据偏移（Grid模式 功能用于判断是否需要偏移header来将下方填满）\n        this.refreshItems(value, reallyOffset) //通过已有的item['index'] 加上数据偏移 来是刷新显示\n        this._maxItemTotal = value // 记录当前总数\n    }\n    /** 获取兄弟节点 */\n    public getBrotherNode(node: cc.Node) {\n        let index = this.getSiblingIndex(node) - 1 // 此 getSiblingIndex 非 this.node.getSiblingIndex\n        return this._children[index]\n    }\n    /** 是否是一组item中第一个（垂直滑动中 一组item 就是单行的所有列 、水平滑动中 一组item 就是单列中所有行）*/\n    public isGroupHeader(node: cc.Node): boolean {\n        let xOry = this.getGroupHeader(node)\n        let pos = this.vertical ? cc.v2(xOry.x, 0) : cc.v2(0, xOry.y)\n        let self = this.vertical ? cc.v2(node.x, 0) : cc.v2(0, node.y)\n        return self.fuzzyEquals(pos, EPSILON)\n    }\n    /** 是否是一组item中最后一个（垂直滑动中 一组item 就是单行的所有列 、水平滑动中 一组item 就是单列中所有行）*/\n    public isGroupFooter(node: cc.Node): boolean {\n        let xOry = this.getGroupFooter(node)\n        let pos = this.vertical ? cc.v2(xOry.x, 0) : cc.v2(0, xOry.y)\n        let self = this.vertical ? cc.v2(node.x, 0) : cc.v2(0, node.y)\n        return self.fuzzyEquals(pos, EPSILON)\n    }\n    /** 获取一组item中起始位置 （垂直滑动中 一组item 就是单行的所有列 、水平滑动中 一组item 就是单列中所有行）*/\n    public getGroupHeader(node: cc.Node): cc.Vec2 {\n        let pos = cc.Vec2.ZERO\n        if (!node) return pos\n        if (this.vertical) {\n            if (this.headerToFooter) {\n                pos.x = node.anchorX * this.getScaleWidth(node) + (this.paddingLeft * node.scaleX) - (this.node.anchorX * this.viewSize.width * node.scaleX)\n                pos.y = (1 - node.anchorY) * -this.getScaleHeight(node) - this.paddingTop + (1 - this.node.anchorY) * this.viewSize.height\n            } else {\n                pos.x = node.anchorX * this.getScaleWidth(node) + this.paddingLeft - this.node.anchorX * this.viewSize.width\n                pos.y = node.anchorY * this.getScaleHeight(node) + this.paddingBottom - this.node.anchorY * this.viewSize.height\n            }\n        } else {\n            if (this.headerToFooter) {\n                pos.x = node.anchorX * this.getScaleWidth(node) + this.paddingLeft - this.node.anchorX * this.viewSize.width\n                pos.y = (1 - node.anchorY) * -node.height - this.paddingTop + (1 - this.node.anchorY) * this.viewSize.height\n            } else {\n                pos.x = this.accommodWidth * this.node.anchorX - this.getScaleWidth(node) * (1 - node.anchorX)\n                pos.y = (1 - node.anchorY) * -node.height - this.paddingTop + (1 - this.node.anchorY) * this.viewSize.height\n            }\n        }\n        return pos\n    }\n    /** 获取一组item中结束位置 （垂直滑动中 一组item 就是单行的所有列 、水平滑动中 一组item 就是单列中所有行）*/\n    public getGroupFooter(node: cc.Node): cc.Vec2 {\n        let pos = cc.Vec2.ZERO\n        if (!node) return pos\n        if (this.vertical) {\n            pos.x = (this.accommodWidth + this.paddingLeft) * this.node.anchorX - (this.getScaleWidth(node) * (1 - node.anchorX) + this.node.anchorX * this.paddingRight)\n            pos.y = node.y\n        } else {\n            pos.x = node.x\n            pos.y = -((this.accommodHeight + this.paddingTop) * this.node.anchorY - this.getScaleHeight(node) * node.anchorY) + (1 - node.anchorY) * this.paddingBottom\n        }\n        return pos\n    }\n    /** 获取一组item中 node 相对 relative 右偏移量 （垂直滑动中 一组item 就是单行的所有列 、水平滑动中 一组item 就是单列中所有行）*/\n    public getGroupRightX(node: cc.Node, relative: cc.Node) {\n        if (!node || !relative) return this.getGroupHeader(node).x\n        let prevWidth = relative.x + this.getScaleWidth(relative) * (1 - relative.anchorX)\n        let selfWidth = this.getScaleWidth(node) * node.anchorX\n        return prevWidth + selfWidth + this.spacing.x\n    }\n    /** 获取一组item中 node 相对 relative 左偏移量 （垂直滑动中 一组item 就是单行的所有列 、水平滑动中 一组item 就是单列中所有行）*/\n    public getGroupLeftX(node: cc.Node, relative: cc.Node) {\n        if (!node || !relative) return this.getGroupFooter(node).x\n        let prevWidth = relative.x - this.getScaleWidth(relative) * relative.anchorX\n        let selfWidth = this.getScaleWidth(node) * (1 - node.anchorX)\n        return prevWidth - selfWidth - this.spacing.x\n    }\n    /** 获取一组item中 node 相对 relative 下偏移量 （垂直滑动中 一组item 就是单行的所有列 、水平滑动中 一组item 就是单列中所有行）*/\n    public getGroupBottomY(node: cc.Node, relative: cc.Node) {\n        let prevHeight = relative.y - this.getScaleHeight(relative) * relative.anchorY\n        let selfHeight = this.getScaleHeight(node) * (1 - node.anchorY)\n        return prevHeight - selfHeight - this.spacing.y\n    }\n    /** 获取一组item中 node 相对 relative 上偏移量 （垂直滑动中 一组item 就是单行的所有列 、水平滑动中 一组item 就是单列中所有行）*/\n    public getGroupTopY(node: cc.Node, relative: cc.Node) {\n        let prevHeight = relative.y + this.getScaleHeight(relative) * (1 - relative.anchorY)\n        let selfHeight = this.getScaleHeight(node) * node.anchorY\n        return prevHeight + selfHeight + this.spacing.y\n    }\n    /** 判断给定的 node 乘以 multiple 倍数后 是否超出了头部边框 （ multiple = 1 就是一个node的尺寸 默认1.5倍）*/\n    public isOutOfBoundaryHeader(node: cc.Node, multiple: number = 1.5) {\n        let width = node.width * this.getUsedScaleValue(node.scaleX) * multiple\n        let height = -node.height * this.getUsedScaleValue(node.scaleY) * multiple\n        let offset = this.scrollView.getHowMuchOutOfBoundary(cc.v2(width, height))\n        return offset\n    }\n    /** 判断给定的 node 乘以 multiple 倍数后 是否超出了尾部部边框 （ multiple = 1 就是一个node的尺寸 默认1.5倍）*/\n    public isOutOfBoundaryFooter(node: cc.Node, multiple: number = 1.5) {\n        let width = -node.width * this.getUsedScaleValue(node.scaleX) * multiple\n        let height = node.height * this.getUsedScaleValue(node.scaleY) * multiple\n        let offset = this.scrollView.getHowMuchOutOfBoundary(cc.v2(width, height))\n        return offset\n    }\n    /** 滚动到头部 （根据 排列方向、排列子节点的方向）来调用 scrollView.scrollTo... 方法 */\n    public scrollToHeader(timeInSecond?: number, attenuated?: boolean) {\n        this.scrollToHeaderOrFooter = timeInSecond > 0\n        this.scrollView.stopAutoScroll()\n        this.resetToHeader()\n        if (this.headerToFooter) {\n            if (this.vertical) {\n                this.scrollView.scrollToTop(timeInSecond, attenuated)\n            } else {\n                this.scrollView.scrollToLeft(timeInSecond, attenuated)\n            }\n        } else {\n            if (this.vertical) {\n                this.scrollView.scrollToBottom(timeInSecond, attenuated)\n            } else {\n                this.scrollView.scrollToRight(timeInSecond, attenuated)\n            }\n        }\n    }\n    /** 滚动到尾部（根据 排列方向、排列子节点的方向）来调用 scrollView.scrollTo... 方法 */\n    public scrollToFooter(timeInSecond?: number, attenuated?: boolean) {\n        this.scrollToHeaderOrFooter = timeInSecond > 0\n        this.scrollView.stopAutoScroll()\n        this.resetToFooter()\n        if (this.headerToFooter) {\n            if (this.vertical) {\n                this.scrollView.scrollToBottom(timeInSecond, attenuated)\n            } else {\n                this.scrollView.scrollToRight(timeInSecond, attenuated)\n            }\n        } else {\n            if (this.vertical) {\n                this.scrollView.scrollToTop(timeInSecond, attenuated)\n            } else {\n                this.scrollView.scrollToLeft(timeInSecond, attenuated)\n            }\n        }\n    }\n    /** 通知给定的node刷新数据 */\n    public notifyRefreshItem(target: cc.Node) {\n        cc.Component.EventHandler.emitEvents(this.refreshItemEvents, target, target['index'])\n    }\n    /** 获取节点索引 */\n    public getSiblingIndex(node: cc.Node) {\n        return this._children.indexOf(node)\n    }\n    /** 自定义索引方法 这里不是通过实时修改节点索引的方法，只是模拟类似的功能，实际上并没有真正改变节点的实际顺序（优化项） */\n    public setSiblingIndex(node: cc.Node, index: number) {\n        // 此方法时参考引擎原setSiblingIndex方法 去掉了修改节点索引位置的调用（item本身的zIndex没有任何变化）\n        index = index !== -1 ? index : this._children.length - 1\n        var oldIndex = this._children.indexOf(node)\n        if (index !== oldIndex) {\n            this._children.splice(oldIndex, 1)\n            if (index < this._children.length) {\n                this._children.splice(index, 0, node)\n            }\n            else {\n                this._children.push(node)\n            }\n            /**\n             * 这里区别于原方法 原方法是改变node节点顺序后发送cc.Node.EventType.SIBLING_ORDER_CHANGED通知 这里不需要修改节点顺序\n             * 这里发送一个自定义事件 模拟 SIBLING_ORDER_CHANGED 通知\n             */\n            this.node.emit(UIChangeBrotherEvnet)\n        }\n    }\n    onLoad() {\n        this.initlized()\n    }\n    /** 初始化 */\n    private initlized() {\n        if (this._isinited) return\n        this.node.anchorX = 0.5 //固定content的锚点为中心\n        this.node.anchorY = 0.5\n        this.node.setContentSize(this.viewSize) //将content的尺寸设置与view相同 （功能用于空列表时也可以下拉刷新和加载） \n        // 重写 this.node.getContentSize 方法 因为content的真实尺寸不会随着item的数量变化\n        this.node.getContentSize = this.getContentSize.bind(this)\n        this.node.setPosition(cc.Vec2.ZERO)\n        this.column = this.column < 1 ? 1 : this.column // 一组item的数量 最少是1 也就是普通的水平/垂直 大于1就是Grid模式\n        // 监听content位置变化 刷新header footer节点的相对位置\n        this.node.on(cc.Node.EventType.POSITION_CHANGED, this.onChangePosition, this)\n        this.scrollView.view.on(cc.Node.EventType.SIZE_CHANGED, this.resetItemSize, this)\n        this._isinited = true\n    }\n    onDestroy() {\n        this.node.off(cc.Node.EventType.POSITION_CHANGED, this.onChangePosition, this)\n        this.scrollView.view.off(cc.Node.EventType.SIZE_CHANGED, this.resetItemSize, this)\n    }\n    private onChangePosition() {\n        let flag = this.isScrollToFooter // this.isScrollToFooter = true 向下滑动 false 向上滑动\n        if (this.headerToFooter) {\n            flag ? this.footerToHeaderWatchChilds(flag) : this.headerToFooterWatchChilds(flag) // 倒序刷新\n        } else {\n            flag ? this.headerToFooterWatchChilds(flag) : this.footerToHeaderWatchChilds(flag) // 正序刷新\n        }\n        // 当item 由多到少 并且 当content的位置被重置到初始状态时 重新设置头部的item归位\n        if (this.vertical && 0 == this.node.y || this.horizontal && 0 == this.node.x) {\n            this.header.setPosition(this.getGroupHeader(this.header))\n        }\n    }\n    public resetItemSize() {\n        // 重新设置原始尺寸\n        for (let i = 0; i < this.children.length; i++) {\n            this.children[i]['saveOriginSize']()\n        }\n        // 改变头部位置\n        let pos = this.getGroupHeader(this.header)\n        if (this.vertical) {\n            this.header.x = pos.x\n        } else {\n            this.header.y = pos.y\n        }\n        // 通知改变坐标事件\n        for (let i = 0; i < this.children.length; i++) {\n            this.children[i].emit(cc.Node.EventType.POSITION_CHANGED)\n        }\n    }\n    /** 获取缩放宽度 */\n    private getScaleWidth(node: cc.Node): number {\n        return node.width * this.getUsedScaleValue(node.scaleX)\n    }\n    /** 获取缩放高度 */\n    private getScaleHeight(node: cc.Node): number {\n        return node.height * this.getUsedScaleValue(node.scaleY)\n    }\n    /** 简单的浅拷贝 */\n    private getTempChildren() {\n        let list = []\n        for (let i = 0; i < this._children.length; i++) {\n            const child = this._children[i];\n            list.push(child)\n        }\n        return list\n    }\n    /** 正序更新item */\n    private headerToFooterWatchChilds(flag) {\n        let children = this.getTempChildren()\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            child['watchSelf'](flag)\n        }\n    }\n    /** 倒序更新item */\n    private footerToHeaderWatchChilds(flag) {\n        let children = this.getTempChildren()\n        for (let i = children.length - 1; i >= 0; i--) {\n            const child = children[i];\n            child['watchSelf'](flag)\n        }\n    }\n    /** 当数据增加、减少时 获取数据偏移 */\n    private getDataOffset(value: number) {\n        // 返回删除数据偏移 （比如当前最大数据值=10，新数据=9 返回-1）\n        if (this.footer && this.footer['index'] + 1 >= value) {\n            let offset = this.footer['index'] + 1 - value\n            return offset == 0 ? 0 : -offset\n        }\n        // 返回增加数据偏移\n        if (this._maxItemTotal == 0 || value < this._maxItemTotal || this._maxItemTotal < this._maxPrefabTotal) return 0 //比如当前最多允许创建10个item 当前显示5个 返回0\n        if (this.isGroupFooter(this.footer)) return 0 //Grid模式 如果尾部的位置是在一组item中末尾的位置时 返回 0 \n        return value - this._maxItemTotal\n    }\n    /** \n     * 当数据增加、减少时 获取节点偏移量 \n     * 当前数据是这样的   增加1个     增加2个\n     * 0,1,2,3           1,2,3         2,3\n     * 4,5,6           4,5,6,7     4,5,6,7\n     *                             8\n    */\n    private getReallyOffset(dataOffset: number) {\n        if (!this.header) return 0\n        if (dataOffset > 0) { // 代表增加item 表格模式下 通过偏移头部来让下方填满 填满后停止偏移\n            for (let i = 0; i < dataOffset; i++) {\n                if (this.isGroupFooter(this.footer)) return i //返回真实的偏移量\n                // 此时如果header 已经是一组item中最后一个时 向下位移 并 设置到一组item的起始位置   \n                let pos = this.header.getPosition()\n                if (this.vertical) { // 垂直滑动时\n                    if (this.isGroupFooter(this.header)) { // 当列表中第一个item正在一组item中末尾位置时\n                        if (this.headerToFooter) {\n                            pos.y = this.getGroupBottomY(this.header, this.header)  //正序排列时 Y轴向下偏移（垂直排列时 一组item 头在左尾在右）\n                        } else {\n                            pos.y = this.getGroupTopY(this.header, this.header) //倒序排列时 Y轴向上偏移（垂直排列时 一组item 头在左尾在右）\n                        }\n                        pos.x = this.getGroupHeader(this.header).x // X轴向头部偏移\n                    } else { // 第一个item没有在一组item中末尾的位置 只将第一个item向右偏移 (只偏移X轴)\n                        pos.x = this.getGroupRightX(this.header, this.header) // X轴向右偏移\n                    }\n                } else { // 水平滑动时\n                    if (this.isGroupFooter(this.header)) {  // 当列表中第一个item正在一组item中末尾位置时\n                        if (this.headerToFooter) {\n                            pos.x = this.getGroupRightX(this.header, this.header) //正序排列时 X轴向右偏移（水平排列时 一组item 头在上尾在下）\n                        } else {\n                            pos.x = this.getGroupLeftX(this.header, this.header) //倒序排列时 X轴向左偏移（水平排列时 一组item 头在上尾在下）\n                        }\n                        pos.y = this.getGroupHeader(this.header).y // Y轴向头部偏移\n                    } else {  // 第一个item没有在一组item中末尾的位置 只将第一个item向下偏移 (只偏移Y轴)\n                        pos.y = this.getGroupBottomY(this.header, this.header) // Y轴向下偏移\n                    }\n                }\n                this.header.setPosition(pos)\n            }\n            return dataOffset\n        }\n        // 代表减少了item 计算偏移量 offset<0 【注意！这里的逻辑和上面正好相反】\n        for (let i = 0; i < Math.abs(dataOffset); i++) {\n            let pos = cc.Vec2.ZERO\n            if (this.vertical) {\n                if (this.isGroupHeader(this.header)) {\n                    pos.x = this.getGroupFooter(this.header).x\n                    if (this.headerToFooter) {\n                        pos.y = this.getGroupTopY(this.header, this.header)\n                    } else {\n                        pos.y = this.getGroupBottomY(this.header, this.header)\n                    }\n                } else {\n                    pos.x = this.getGroupLeftX(this.header, this.header)\n                    pos.y = this.header.y\n                }\n            } else {\n                if (this.isGroupHeader(this.header)) {\n                    pos.y = this.getGroupFooter(this.header).y\n                    if (this.headerToFooter) {\n                        pos.x = this.getGroupLeftX(this.header, this.header)\n                    } else {\n                        pos.x = this.getGroupRightX(this.header, this.header)\n                    }\n                } else {\n                    pos.y = this.getGroupTopY(this.header, this.header)\n                    pos.x = this.header.x\n                }\n            }\n            this.header.setPosition(pos)\n        }\n        this.scrollView.calculateBoundary()\n        return dataOffset\n    }\n    /** 刷新所有item数据 根据当前item的 index 刷新 */\n    private refreshItems(value: number, offset: number = 0) {\n        if (!this.header) return\n        let startIndex = this.header['index'] - 1 + offset // 获取头部item持有的index 加上 数据偏移来计算起始index \n        for (let i = 0; i < this._children.length; i++) {\n            const child = this._children[i];\n            startIndex++\n            // 这里的判断用于无限循环滚动的逻辑 如果索引大于数据总数 索引归零\n            if (startIndex > value - 1) {\n                startIndex = 0\n            } else if (startIndex < 0) { // 索引小于0 索引定位到数据尾部 保持首尾相连\n                startIndex = value - 1\n            }\n            child['index'] = startIndex //设置当前索引\n            this.notifyRefreshItem(child)\n        }\n    }\n    /** 从头部到尾部重置数据 */\n    private resetToHeader() {\n        for (let i = 0; i < this._children.length; i++) {\n            const child = this._children[i];\n            child['index'] = i\n            this.notifyRefreshItem(child)\n        }\n        if (!this.headerLoop && !this.footerLoop) {\n            this.header?.setPosition(this.getGroupHeader(this.header))\n        } else if (!this.scrollToHeaderOrFooter) {\n            this.header?.setPosition(this.getGroupHeader(this.header))\n        }\n    }\n    /** 从尾部到头部重置数据 */\n    private resetToFooter() {\n        let index = this._maxItemTotal\n        for (let i = this._children.length - 1; i >= 0; i--) {\n            var child = this._children[i]\n            child['index'] = --index\n            this.notifyRefreshItem(child)\n        }\n    }\n    /** 删除多余的item */\n    private removeChilds(value: number) {\n        // 有多余的item 需要删除\n        let length = this.node.childrenCount - value\n        // 删除掉多余的item\n        for (let i = 0; i < length; i++) {\n            var child = this.footer\n            this.remChild(child)\n            child.destroy()\n            this.node.removeChild(child)\n        }\n        if (!this.header) return\n        // 将头部节点的位置重置到一组item的第一个位置\n        let pos = this.getGroupHeader(this.header)\n        if (this.vertical) {\n            this.header.x = pos.x\n        } else {\n            this.header.y = pos.y\n        }\n    }\n    /** 分帧创建item */\n    private async asyncCreateItem(value: number) {\n        this._gener?.return(\"\")//取消上一次的分帧任务（如果任务正在执行）\n        // 有多余的item 需要删除 不处理\n        if (this.node.childrenCount > value) return this.removeChilds(value)\n        // 已经固定item总数 不处理\n        if (this._maxPrefabTotal > 0 && this._maxPrefabTotal == this.node.childrenCount) return\n        // 开始分帧创建item\n        let total = value - this.node.childrenCount //计算当前应该创建的总数\n        this._gener = this.getGeneratorLength(total, () => {\n            let child = cc.instantiate(this.prefab)\n            child['index'] = this.node.childrenCount\n            this.addChild(child)\n            // 获取或添加 UISuperItem\n            let spuerItem = child.getComponent(UISpuerItem) || child.addComponent(UISpuerItem)\n            this.node.addChild(child)\n            spuerItem.init(this)\n            // item在首次创建时立即刷新 避免显示item初始状态\n            this.notifyRefreshItem(child)\n            // 如果创建的是第一个item 设置他的起始位置 之后的item会自动相对于他来设置自己 我们只需要确定第一个位置就行了\n            if (this.node.childrenCount == 1) {\n                let pos = this.getGroupHeader(this.header) //获取一组item中头部位置\n                this.header.setPosition(pos)\n                /**\n                 * 利用cc.ScrollView的方法来设置content的起始位置 由于content在初始化的时候固定了锚点都为0.5 所以这里必然是坐标0 \n                 * 如果你没有其他需求确定用0.5锚点的话 这里可以自己设置为cc.Vec2.ZERO 节省不必要的计算（实际上计算量可忽略不计）\n                 */\n                this.scrollView.calculateBoundary()\n            }\n            let selfHorW, viewHorW\n            if (this.vertical) {\n                selfHorW = this.getReallySize().height\n                viewHorW = this.viewSize.height\n            } else {\n                selfHorW = this.getReallySize().width\n                viewHorW = this.viewSize.width\n            }\n            /**\n             * 根据排列方向 来判断对比宽度还是高度\n             * 这里使用参数this.multiple来判断是否需要继续创建 默认为2倍 比如view可视尺寸为800 2倍就是1600\n             * 根据之前所创建的所有item的尺寸计算是否满足这个尺寸 如果满足则不再继续创建 \n             * 由于是分帧加载 所以下一次创建会等这一次的返回结果 返回false 则终止分帧任务\n             */\n            if (selfHorW >= viewHorW * this.multiple && this.isGroupFooter(this.footer)) {\n                this._maxPrefabTotal = this.node.childrenCount //固定item数量 不在继续创建\n                return false\n            }\n            return true\n        })\n        await this.exeGenerator(this._gener, 10) //执行分帧任务 1帧创建10个\n    }\n    /** 同步添加本地变量 children 并发送 UIChangeBrotherEvnet 通知*/\n    private addChild(node: cc.Node) {\n        this._children.push(node)\n        this.node.emit(UIChangeBrotherEvnet)\n    }\n    /** 同步移除本地变量 children 并发送 UIChangeBrotherEvnet 通知 */\n    private remChild(node: cc.Node) {\n        let index = this._children.indexOf(node)\n        if (index == -1) return\n        this._children.splice(index, 1)\n        this.node.emit(UIChangeBrotherEvnet)\n    }\n    /** 分帧加载 */\n    private * getGeneratorLength(length: number, callback: Function, ...params: any): Generator {\n        for (let i = 0; i < length; i++) {\n            let result = callback(i, ...params)\n            if (result) {\n                yield\n            } else {\n                return\n            }\n        }\n    }\n    /** 分帧执行 */\n    private exeGenerator(generator: Generator, duration: number) {\n        return new Promise((resolve, reject) => {\n            let gen = generator\n            let execute = () => {\n                let startTime = new Date().getTime()\n                for (let iter = gen.next(); ; iter = gen.next()) {\n                    if (iter == null || iter.done) {\n                        resolve(null)\n                        return\n                    }\n                    if (new Date().getTime() - startTime > duration) {\n                        setTimeout(() => execute(), cc.director.getDeltaTime() * 1000)\n                        return\n                    }\n                }\n            }\n            execute()\n        })\n    }\n}\n"]}